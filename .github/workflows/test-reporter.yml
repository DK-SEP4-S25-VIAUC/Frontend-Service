name: Run Vitest Tests and Report
on:
  pull_request:
    branches: [ main, master, feature/main ]
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: read
    defaults:
      run:
        working-directory: ./WebClient  # Set the working directory to WebClient
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './WebClient/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run Vitest with JUnit reporter
        run: npm test -- --reporter=junit --outputFile=./junit.xml
        
      - name: Test Reporter
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Vitest Tests
          path: WebClient/junit.xml
          reporter: jest-junit
          list-suites: all
          list-tests: failed
          fail-on-error: false
          
      - name: Generate detailed test summary
        if: success() || failure()
        id: test-summary
        run: |
          echo "### Test Results Summary 📊" > test-summary.md
          echo "" >> test-summary.md
          
          # Extract test stats from the XML
          TOTAL=$(grep -c "<testcase" junit.xml)
          FAILED=$(grep -c "<failure" junit.xml || echo 0)
          PASSED=$((TOTAL - FAILED))
          TIME=$(grep "time=" junit.xml | head -1 | sed 's/.*time="\([^"]*\).*/\1/')
          
          echo "✅ **$PASSED** tests passed" >> test-summary.md
          if [ "$FAILED" -gt "0" ]; then
            echo "❌ **$FAILED** tests failed" >> test-summary.md
            
            # Extract names of failed tests
            echo "" >> test-summary.md
            echo "#### Failed Tests" >> test-summary.md
            grep -B 1 "<failure" junit.xml | grep "<testcase" | sed 's/.*name="\([^"]*\).*/- \1/' >> test-summary.md
          fi
          
          echo "" >> test-summary.md
          echo "⏱️ Total time: **${TIME}s**" >> test-summary.md
          echo "" >> test-summary.md
          echo "[View detailed test report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> test-summary.md
          
          cat test-summary.md
          
      - name: Add test summary to PR
        if: github.event_name == 'pull_request' && (success() || failure())
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          path: WebClient/test-summary.md
          header: test-results
